//Question 1
//a)
ONEBUF=(put->get->ONEBUF).

PRODUCER = (put->PRODUCER).

CONSUMER = (get->CONSUMER).

||ONEBUF_USERS = (p[1..3]:PRODUCER || ONEBUF || c[1..4]:CONSUMER) /{p[1..3].put/put, c[1..4].get/get}.

//b)
SEMAPHORE(S=0)= SEMAPHORE[S], 
SEMAPHORE[s:0..1] = (when(s>0) p -> SEMAPHORE[s-1] | v -> SEMAPHORE[s+1]).

ONEBUF=(empty.p -> put -> full.v -> ONEBUF
        | full.p -> get -> empty.v -> ONEBUF).

PRODUCER = (put -> PRODUCER).
CONSUMER = (get -> CONSUMER).

||ONEBUF_USERS = (p[1..3]:PRODUCER || p[1..3]::ONEBUF || c[1..4]::ONEBUF ||
                  ||c[1..4]:CONSUMER || empty:SEMAPHORE(1) || full:SEMAPHORE(0))
                  /{p[1..3].put/put, c[1..4].get/get}.

//Question 2
//a)
SEMAPHORE(S=0)=SEMAPHORE[S],
SEMAPHORE[s:0..4]=(when (s>0) p -> SEMAPHORE[s-1] | v -> SEMAPHORE[s+1]).

CARPARKCONTROL(N=4) = SPACES[N],
SPACES[i:0..N] = (when (i>0) empty.p -> arrive -> full.v -> SPACES[i-1]
                  | when (i<N) full.p -> depart -> empty.v -> SPACES[i+1]).

ARRIVALS=(arrive->ARRIVALS).
DEPARTURES=(depart->DEPARTURES).

||CARPARK=(ARRIVALS || CARPARKCONTROL(4) || DEPARTURES || empty:SEMAPHORE(4)||full:SEMAPHORE(0)).

//b)
TEST1 = (arrive -> if (i<=0) then ERROR else TEST1).

TEST2 = (depart -> if (i>=N) then ERROR else TEST2).

||TEST_CARPARK=(CARPARK||TEST1||TEST2).

