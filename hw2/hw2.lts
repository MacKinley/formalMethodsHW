/**** 2-2 ****/
	//part 1
const N = 1
USER = (call->wait->continue->USER).
SERVER = ([i:0..N].request->[i].service->[i].reply->SERVER).

||RESOURCE_SHARE = (user[i:0..N]:USER || SERVER) /
	{user[i:0..N].call / [i].request,
	[i:0..N].reply / user[i].wait}.

	//part 2
USERV2 = (call->(wait->continue->USERV2
				|timeout->USERV2)).
SERVERV2 = ([i:0..N].request->([i].service->[i].reply->SERVERV2
							  |[i].terminate->SERVERV2)).

||RESOURCE_SHAREV2 = (user[i:0..N]:USERV2 || SERVERV2) /
	{user[i:0..N].call / [i].request,
	[i:0..N].reply / user[i].wait,
	user[i:0..2].timeout / [i].terminate}.

/**** 2-3 ****/
TURNSTILE = (passengerArrive -> TURNSTILE).
ROLLER_CONTROL(M=5) = ROLLER_CONTROL[0],
ROLLER_CONTROL[i:0..M] = (when(i<M) register -> ROLLER_CONTROL[i+1]
				  |when(i==M) run -> wait -> ROLLER_CONTROL[0]).
CAR = (depart -> return -> CAR).

||ROLLER_COASTER = (TURNSTILE||ROLLER_CONTROL||CAR) / {passengerArrive/register, depart/run, return/wait}.

/**** 2-4 ****/
const MAX = 5
EAST = (arrival -> EAST).
WEST = (departure -> WEST).
DIRECTOR = (open -> DIRECTOR
			|close -> DIRECTOR).
MUSEUM_CONTROL = MUSEUM_CONTROL[0][0],
MUSEUM_CONTROL[i:0..MAX][o:0..1] = (when(i < MAX && o == 1) allowEnter -> MUSEUM_CONTROL[i+1][o]
								|when(i >0) allowLeave -> MUSEUM_CONTROL[i-1][o]
								|when(o == 0) open -> MUSEUM_CONTROL[i][1]
								|when(o == 1) close -> MUSEUM_CONTROL[i][0]).

||MUSEUM = (EAST||WEST||DIRECTOR||MUSEUM_CONTROL) / {arrival/allowEnter, departure/allowLeave}.
