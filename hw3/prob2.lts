const N = 3
range P = 1..2 //thread identities
range C = 0..N //counter range for lock

RECURSIVE_LOCK = (acquire[p:P] -> LOCKED[p][0]),
LOCKED[p:P][i:C] = (when (i<N) acquire[p] -> LOCKED[p][i+1]
			| when (i>0) release[p] -> LOCKED[p][i-1]
			| when (i==0) release[p] -> RECURSIVE_LOCK).
